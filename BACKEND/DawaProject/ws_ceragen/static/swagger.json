{
  "swagger": "2.0",
  "info": {
    "description": "Documentación  de WS para Sistema de Terapias Médicas",
    "version": "1.0.0",
    "title": "Documentación  de WS para Sistema de Terapias Médicas",
    "termsOfService": "Leer wwww.jucacorp.com",
    "contact": {
      "email": "juca.cedeno.rodriguez@gmail.com"
    },
    "license": {
      "name": "Proyecto Gestión Médica",
      "url": "none"
    }
  },
  "tags": [
    {
      "name": "WS CERAGEN",
      "description": "WS CERAGEN"
    },
    {
      "name": "WS Security",
      "description": "Módulo de Seguridad y Auditoría"
    },
    {
      "name": "WS Admin",
      "description": "Módulo de Administración"
    }
  ],
  "paths": {
    "/Audit/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Audit   SQL: List ",
        "description": "Lista de comandos  SQL ",
        "operationId": "auditSQLList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Error/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Error : List ",
        "description": "Lista de Errores del Sistema ",
        "operationId": "errorList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Notification/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Lista de Notificiones",
        "description": "Lista de Notificiones",
        "operationId": "NotificationList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Notification/read": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Notificacion: Update ",
        "description": "Actualization:  the notification is read",
        "operationId": "notificationUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Notification_is_read",
            "description": "Notification_is_read",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification_update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/login": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Login de Usuario",
        "description": "Login de Usuario",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUserDef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/logout": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Salir",
        "description": "Salir  de la aplicacion",
        "operationId": "LogOut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "logout",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logoutUserDef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Lista de Usuarios",
        "description": "Lista de Usuarios",
        "operationId": "userList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/actulization/data": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Datos de Usuario",
        "description": "Se envia los datos al  usuarios cuando se recarga la pagina",
        "operationId": "userActualizationData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/change-password": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Update Password",
        "description": "Se actualiza la contraseña cuando, cuando esta conectado",
        "operationId": "UserUpdatePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/recover-password": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Send Mail from reset password",
        "description": "Se en via el correo para actualizar la contraseña",
        "operationId": "SendEmailPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User_id",
            "description": "Mail from reset password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/send_email_password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/change-password": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Update Password Email",
        "description": "Se actualiza la contraseña mediante correo ",
        "operationId": "EmailUpdatePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_email_password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Insert ",
        "description": "Insert un nuevo usuario",
        "operationId": "user_Insert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_Rol_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Delete",
        "description": "Eliminar un User",
        "operationId": "UserDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Delete",
        "description": "update un User",
        "operationId": "Userupdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/person/get": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Obtener datos de Persona ",
        "description": "Obtener datos de Persona",
        "operationId": "PersonGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Insert ",
        "description": "Insert un nuevo rol",
        "operationId": "rolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "RolSistem_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_rolsistem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: List ",
        "description": "Lista de los roles",
        "operationId": "rolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Update ",
        "description": "Eliminar un Rol",
        "operationId": "rolDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Rol_id",
            "description": "ID of the resource to delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Update ",
        "description": "Actualizar un Rol",
        "operationId": "rolUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Rol_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_rolsistem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "UserRol: Insert ",
        "description": "Asignar un nuevo rol al Usuario",
        "operationId": "UserRolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "UserRol_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_useRol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: List",
        "description": "Lista de Roles y Menu",
        "operationId": "RolUserList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: Delete",
        "description": "Eliminar un  Rol_Menu",
        "operationId": "RolUserDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "UserRol_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: Update",
        "description": "Aectualizar  Roles y Menu",
        "operationId": "UserRolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_useRol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": " Modulo : Insert",
        "description": "Insertar un Modulo",
        "operationId": "ModuloInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_modulo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: List",
        "description": "Lista de Modulos",
        "operationId": "ModuloList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: Delete",
        "description": "Eliminar un Modulo",
        "operationId": "ModuloDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: Update",
        "description": "Actualizar un Modulo",
        "operationId": "ModuloUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_modulo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Insert",
        "description": "Ingresar un nuevo Menu",
        "operationId": "MenuInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_menu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: List",
        "description": "Lista de Menu",
        "operationId": "MenuList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Eliminar un nuevo Menu",
        "operationId": "MenuDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Update",
        "description": "Actualizar un nuevo Menu",
        "operationId": "MenuUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_update",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_menu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "MenuRol: Insert",
        "description": "Ingresar un nuevo Menu y Rol",
        "operationId": "MenuRolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_menurol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "MenuRol: List",
        "description": "Lista de Menus y Roles",
        "operationId": "MenuRolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Eliminar un  Menu-Rol",
        "operationId": "MenuRolDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "MenuRol_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Update",
        "description": "Actualizar un nuevo Menu-Rol",
        "operationId": "MenuRolUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_update",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_menurol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de Personas Admin",
        "description": "Obtiene una lista de todas las personas ",
        "operationId": "listAdminPersons",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "items": {
                "$ref": "#/definitions/AdminPersonResponse"
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/add": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Agregar Personas",
        "description": "Agregar los datos de una Persona",
        "operationId": "add_admin_person",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Person_insert",
            "description": "Datos insertados de la Persona",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "per_identification": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "per_names": {
                  "type": "string",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "per_surnames": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "per_genre_id": {
                  "type": "integer",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "per_marital_status_id": {
                  "type": "integer",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "per_country": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "per_city": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "per_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_phone": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_mail": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_birth_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Fecha de nacimiento"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar Personas",
        "description": "Actualizar los datos de una Persona",
        "operationId": "update_admin_person",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Person_insert",
            "description": "Datos insertados de la Persona",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "per_id": {
                  "type": "integer",
                  "description": "Nombre de la unidad académica"
                },
                "per_identification": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "per_names": {
                  "type": "string",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "per_surnames": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "per_genre_id": {
                  "type": "integer",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "per_marital_status_id": {
                  "type": "integer",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "per_country": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "per_city": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "per_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_phone": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_mail": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar Persona por ID",
        "description": "Elimina una Persona específico por su ID",
        "operationId": "delete_admin_person",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la persona a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de Estados civiles",
        "description": "Obtiene una lista de todos los estados civiles",
        "operationId": "ListAllMaritalStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/list/{id}": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Obtener Estado Marital por ID",
        "description": "Obtiene un Estado Marital específico por su ID",
        "operationId": "GetMaritalStatusById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del Estado Marital",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/add": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Agregar Estado Civil",
        "description": "Agregar los datos de un Estado Civil específico",
        "operationId": "AddMaritalStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Marital_Status_insert",
            "description": "Datos insertados del Estado Civil",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status_name": {
                  "type": "string",
                  "description": "Estado Civil"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar Estado Civil",
        "description": "Actualiza un estado civil específico",
        "operationId": "UpdateMaritalStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Marital_Status_update",
            "description": "Datos actualizados del estado civil",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id del estado civil a actualizar"
                },
                "status_name": {
                  "type": "string",
                  "description": "Nombre del estado civil"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar estado Civil por ID",
        "description": "Elimina un estado civil específico por su ID",
        "operationId": "DeleteMaritalStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del estado civil a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de Parametros",
        "description": "Obtiene una lista de todos los Parametros ",
        "operationId": "ListAllParameterList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/add": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Agregar Lista de Parametros",
        "description": "Agregar los datos de un parametro específico",
        "operationId": "AddParameterList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Parameter_List_insert",
            "description": "Datos insertados del Parametro",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pli_code_parameter": {
                  "type": "string",
                  "description": "Codigo de Parametro"
                },
                "pli_string_value_return": {
                  "type": "string",
                  "description": "Retorno de valor"
                },
                "pli_numeric_value_return": {
                  "type": "integer",
                  "description": "valor de retorno"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar Lista de Parametros",
        "description": "Actualiza los datos de un Parametro específico",
        "operationId": "UpdateParameterList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Parameter_List_update",
            "description": "Datos actualizados del Parametro",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pli_id": {
                  "type": "integer",
                  "description": "Id de la unidad academica"
                },
                "pli_code_parameter": {
                  "type": "string",
                  "description": "Codigo de Parametro"
                },
                "pli_string_value_return": {
                  "type": "string",
                  "description": "Retorno de valor string"
                },
                "pli_numeric_value_return": {
                  "type": "integer",
                  "description": "Valor numerico de retorno"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la lista de parametros",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar lista de parametros por ID",
        "description": "Elimina una lista de parametros específica por su ID",
        "operationId": "DeleteParamaterList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la lista de parametros a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de Personas",
        "description": "Obtiene una lista de los géneros de las personas",
        "operationId": "ListAllPersonGenre",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/list/{id}": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Obtener Género por ID",
        "description": "Obtiene un género específico por su ID",
        "operationId": "GetPersonGenreById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del género",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/add": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Agregar Género",
        "description": "Agregar un género específico",
        "operationId": "AddAPersonGenre",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Person_Genre_insert",
            "description": "Datos insertados del género",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "genre_name": {
                  "type": "string",
                  "description": "Nombre del género"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al agregar el género",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar Género",
        "description": "Actualiza un Género específico",
        "operationId": "UpdatePersonGenre",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Person_Genre_update",
            "description": "Género actualizado",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID del Género"
                },
                "genre_name": {
                  "type": "string",
                  "description": "Nombre del Género"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar el Género",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar Género de Persona por ID",
        "description": "Elimina un Género de Persona específico por su ID",
        "operationId": "DeletePersonGenre",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del Género de Persona a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/product/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de productos",
        "description": "Obtiene una lista de todos los productos",
        "operationId": "ListAllProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/product/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Agregar Producto",
        "description": "Agregar un producto específico",
        "operationId": "AddProduct",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminProductInsert",
            "description": "Datos para insertar un producto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminProductInsert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/product/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un Producto",
        "description": "Actualizar un producto específico",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminProductUpdate",
            "description": "Datos para actualizar un producto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminProductUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/product/delete/{pro_id}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un Producto",
        "description": "Eliminar un producto específico",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "pro_id",
            "in": "path",
            "description": "ID del Producto a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Producto eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/promotion/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de promociones",
        "description": "Obtiene una lista de todos las promociones",
        "operationId": "ListAllPromotions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/promotion/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear una promocion",
        "description": "Crear una promocion para un producto",
        "operationId": "CreatePromotion",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminProductCreate",
            "description": "Datos para crear un producto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminPromotionCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/promotion/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar una promocion",
        "description": "Actualizar una promocion específico",
        "operationId": "UpdatePromotion",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminPromotionUpdate",
            "description": "Datos para actualizar una promocion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminPromotionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/payment_method/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Metodos de pago",
        "description": "Obtiene una lista de todos los metodos de pago disponible",
        "operationId": "ListAllPaymentMethod",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/payment_method/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear un metodo de pago",
        "description": "Crear un nuevo metodo de pago",
        "operationId": "CreatePaymentMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminPaymentMethodCreate",
            "description": "Datos para crear un metodo de pago",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminPaymentMethodCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metodo de pago agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el metodo de pago",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/payment_method/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un metodo de pago",
        "description": "Actualizar un metodo de pago",
        "operationId": "UpdatePaymentMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminPaymentMethodUpdate",
            "description": "Datos para actualizar un metodo de pago",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminPaymentMethodUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el producto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/payment_method/delete/{pme_id}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un metodo de pago",
        "description": "Eliminar un metodo de pago específico",
        "operationId": "DeletePaymentMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "pme_id",
            "in": "path",
            "description": "ID del metodo de pago a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Metodo de pago eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el metodo de pago",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/dashboard/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Dashboard de aplicacion",
        "description": "Obtiene el contenido y lo muestra de manera grafica",
        "operationId": "ListAllDashboard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/therapy-type/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Listado de tipos de terapia",
        "description": "Obtiene el listado de tipo de terapias",
        "operationId": "ListAllTherapyType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/therapy-type/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear un tipo de terapia",
        "description": "Crear un tipo de terapia",
        "operationId": "CreateTherapyTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminTherapyTypeMethodCreate",
            "description": "Datos para crear un nuevo tipo de terapia",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminTherapyTypeMethodCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de terapia agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el tipo de terapia",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/therapy-type/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un tipo de terapia",
        "description": "Actualizar un tipo de terapia",
        "operationId": "UpdateTherapyTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminTherapyTypeMethodUpdate",
            "description": "Datos para actualizar un tipo de terapia",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminTherapyTypeMethodUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de terapia agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el tipo de terapia",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/therapy-type/delete/{tht_id}": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un tipo de terapia",
        "description": "Eliminar un tipo de terapia específico",
        "operationId": "DeleteTherapyTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "tht_id",
            "in": "path",
            "description": "ID del tipo de terapia",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de terapia eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el tipo de terapia",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/medicalPersonType/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Listado de tipos de medicos",
        "description": "Obtiene el listado de tipo de medicos",
        "operationId": "ListAllMedicPersonType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/medicalPersonType/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear un tipos de medico",
        "description": "Crear un tipos de medico",
        "operationId": "CreateMedicalPersonTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminMedicalPersonTypeCreate",
            "description": "Datos para crear un nuevo tipo de medico",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminMedicalPersonTypeCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de medicos agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el tipo de medico",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/medicalPersonType/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un tipo de medico",
        "description": "Actualizar un tipo de medico",
        "operationId": "UpdateMedicalPersonTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminMedicalPersonTypeUpdate",
            "description": "Datos para actualizar un nuevo tipo de medico",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminMedicalPersonTypeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de medicos actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al actualizar el tipo de medico",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/medicalPersonType/delete/{mpt_id}": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un tipo de medico",
        "description": "Eliminar un tipo de medico específico",
        "operationId": "DeleteMedicalPersonTypeMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpt_id",
            "in": "path",
            "description": "ID del tipo de medico",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de medico eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el tipo de medico",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/client/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Listado de clientes",
        "description": "Obtiene el listado de clientes",
        "operationId": "ListAllClients",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/client/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear un cliente",
        "description": "Crear un cliente",
        "operationId": "CreateClientInsert",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminClientCreate",
            "description": "Datos para crear un nuevo cliente",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminClientCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el cliente",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/client/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un cliente",
        "description": "Actualizar un cliente especifico",
        "operationId": "CreateClientUpdate",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminClientUpdate",
            "description": "Datos para actualizar un nuevo cliente",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminClientUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al actualizar el cliente",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/client/delete/{cli_id}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un cliente",
        "description": "Eliminar un cliente en específico",
        "operationId": "DeleteClient",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "cli_id",
            "in": "path",
            "description": "ID del cliente",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el cliente",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/ExpenseType/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Listado de tipo gastos (expense)",
        "description": "Obtiene el listado de tipo de gasto",
        "operationId": "ListAllExpenseType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ExpenseType/{ext_id}": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Obtener un tipo de gastos por id",
        "description": "Obtiene un tipo gasto en especifico",
        "operationId": "ByIdExpenseType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "ext_id",
            "in": "path",
            "description": "ID del tipo de gasto",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ExpenseType/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Crear un nuevo gasto",
        "description": "Crear un gasto",
        "operationId": "CreateExpenseTypeInsert",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminExpenseTypeCreate",
            "description": "Datos para crear un nuevo gasto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminExpenseTypeCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gasto agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al agregar el gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/ExpenseType/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un tipo de gasto",
        "description": "Actualizar un tipo de gasto especifico",
        "operationId": "UpdateExpenseTypeUpdate",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminExpenseTypeUpdate",
            "description": "Datos para actualizar un tipo de gasto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminExpenseTypeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de gasto actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al actualizar el tipo de gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/ExpenseType/delete/{ext_id}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un tipo de gasto",
        "description": "Eliminar un tipo de gasto en específico",
        "operationId": "DeleteExpenseType",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "ext_id",
            "in": "path",
            "description": "ID del tipo de pago",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de gasto eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el tipo de gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/expense/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Listado de gastos",
        "description": "Obtiene el listado de gastos",
        "operationId": "ListAllExpense",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/expense/{exp_id}": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Obtener gastos por id",
        "description": "Obtiene un gasto en especifico",
        "operationId": "ByIdExpense",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "exp_id",
            "in": "path",
            "description": "ID del gasto",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/expense/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Re un gasto",
        "description": "Registrar un gasto especifico",
        "operationId": "CreateExpenseInsert",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminExpenseInsert",
            "description": "Datos para registrer un gasto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminExpenseInsert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gasto registrado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al registrar el gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/expense/update": {
      "patch": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Actualizar un  gasto",
        "description": "Actualizar un gasto especifico",
        "operationId": "CreateExpenseUpdate",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminExpenseUpdate",
            "description": "Datos para actualizar un gasto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminExpenseUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gasto actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al actualizar el gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/expense/delete/{exp_id}": {
      "delete": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Eliminar un gasto",
        "description": "Eliminar un gasto en específico",
        "operationId": "DeleteExpense",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "exp_id",
            "in": "path",
            "description": "ID del gasto",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de gasto eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el tipo de gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/patients/list": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Lista los pacientes",
        "description": "LIsta todos los Pacientes Activos",
        "operationId": "patientList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/clinic/patients/list/{pat_id}": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Obetener paciente por id",
        "description": "Obtiene Paciente especifico por su Id",
        "operationId": "patientGetById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pat_id",
            "description": "ID del paciente a revisar (pat_id en la tabla de pacientes)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/clinic/patients/add": {
      "post": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Crea un nuevo paciente",
        "description": "Añade un nuevo paciente al registro",
        "operationId": "patientInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Patient data to insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patient_insert_request",
              "example": {
                "pat_person_id": 101,
                "pat_client_id": 1,
                "pat_code": "P123456",
                "pat_medical_conditions": "Asma y presión alta",
                "pat_allergies": "Penicilina",
                "pat_blood_type": "O+",
                "pat_emergency_contact_name": "Carlos Gómez",
                "pat_emergency_contact_phone": "0987654321"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/patients/update/{pat_id}": {
      "patch": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Actualizar Paciente",
        "description": "Actualiza un paciente",
        "operationId": "patientUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pat_id",
            "description": "ID del paciente a actualizar",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos del paciente a actualizar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patient_update_request",
              "example": {
                "pat_person_id": 7,
                "pat_client_id": 201,
                "pat_code": "P1677456",
                "pat_medical_conditions": "Asma leve controlada",
                "pat_allergies": "Ninguna",
                "pat_blood_type": "O+",
                "pat_emergency_contact_name": "Guaman perez",
                "pat_emergency_contact_phone": "0987654321",
                "user_modified": "admin"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/clinic/patients/delete/{pat_id}": {
      "delete": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Eliminar Paciente (Soft Delete)",
        "description": "Desactiva un paciente por Id (soft delete)",
        "operationId": "patientDelete",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pat_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa"
          },
          "500": {
            "description": "Error"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/medical-histories/list": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Listar todas las historias clínicas",
        "description": "Recupera una lista de todos los historiales médicos registrados en el sistema.",
        "operationId": "getAllMedicalHistoriesList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Historias médicas obtenidas exitosamente.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicalHistoryResponse"
              }
            }
          },
          "401": {
            "description": "No autorizado, token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "No se encontraron historias médicas.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/medical-histories/list/{hist_id}": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Obtener historial médico por ID de Historia",
        "description": "Recupera un historial médico específico utilizando su ID.",
        "operationId": "getMedicalHistoryByIdInList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "hist_id",
            "type": "integer",
            "required": true,
            "description": "ID del historial médico a recuperar."
          }
        ],
        "responses": {
          "200": {
            "description": "Historial médico obtenido exitosamente.",
            "schema": {
              "$ref": "#/definitions/MedicalHistoryResponse"
            }
          },
          "401": {
            "description": "No autorizado, token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Historial médico no encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/medical-histories/patientHist/{hist_patient_id}": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Obtener historial médico por ID de paciente",
        "description": "Recupera un historial médico específico utilizando ID de paciente.",
        "operationId": "getMedicalHistoryByIdInList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "hist_id",
            "type": "integer",
            "required": true,
            "description": "ID del historial médico a recuperar."
          }
        ],
        "responses": {
          "200": {
            "description": "Historial médico obtenido exitosamente.",
            "schema": {
              "$ref": "#/definitions/MedicalHistoryResponse"
            }
          },
          "401": {
            "description": "No autorizado, token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Historial médico no encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/medical-histories/insert": {
      "post": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Insertar un nuevo historial médico",
        "description": "Crea un nuevo registro de historial médico.",
        "operationId": "insertMedicalHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos del nuevo historial médico a insertar",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hist_patient_id": {
                  "type": "integer"
                },
                "hist_primary_complaint": {
                  "type": "string"
                },
                "hist_onset_date": {
                  "type": "string",
                  "format": "date"
                },
                "hist_related_trauma": {
                  "type": "boolean"
                },
                "hist_current_treatment": {
                  "type": "string"
                },
                "hist_notes": {
                  "type": "string"
                },
                "user_created": {
                  "type": "string"
                },
                "date_created": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "example": {
                "hist_patient_id": 5,
                "hist_primary_complaint": "Dolor torácico severo",
                "hist_onset_date": "2025-06-15",
                "hist_related_trauma": true,
                "hist_current_treatment": "Analgésicos y reposo",
                "hist_notes": "Paciente refiere dolor tras accidente automovilístico.",
                "user_created": "admin_user",
                "date_created": "2025-06-30 10:00:00"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historial médico insertado exitosamente.",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Historial médico insertado exitosamente"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "hist_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    },
    "/medical-histories/update/{hist_id}": {
      "patch": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Actualizar un historial médico existente",
        "description": "Actualiza la información de un historial médico existente por su ID.",
        "operationId": "updateMedicalHistoryFromAdd",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "hist_id",
            "type": "integer",
            "required": true,
            "description": "ID del historial médico a actualizar."
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos del historial médico a actualizar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalHistoryUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historial médico actualizado exitosamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos de entrada inválidos.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "No autorizado, token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Historial médico no encontrado o sin datos para actualizar.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/medical-histories/delete/{hist_id}": {
      "delete": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Eliminar un historial médico",
        "description": "Elimina permanentemente un historial médico por su ID.",
        "operationId": "deleteMedicalHistorySpecific",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "hist_id",
            "type": "integer",
            "required": true,
            "description": "ID del historial médico a eliminar."
          }
        ],
        "responses": {
          "200": {
            "description": "Historial médico eliminado exitosamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "No autorizado, token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Historial médico no encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/patient-allergy/add": {
      "post": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Agregar alergia al paciente",
        "description": "Crea un nuevo registro de alergia para un paciente.",
        "operationId": "addPatientAllergy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos de la alergia",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientAllergyInsert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alergia registrada exitosamente."
          },
          "400": {
            "description": "Solicitud inválida."
          },
          "401": {
            "description": "No autorizado."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/clinic/patient-allergy/update/{pa_id}": {
      "patch": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Actualizar alergia del paciente",
        "description": "Actualiza los datos de una alergia existente del paciente.",
        "operationId": "updatePatientAllergy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pa_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientAllergyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alergia actualizada correctamente."
          },
          "400": {
            "description": "Datos inválidos."
          },
          "404": {
            "description": "Alergia no encontrada."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/clinic/patient-allergy/list": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Listar alergias de pacientes",
        "description": "Devuelve todas las alergias registradas de los pacientes.",
        "operationId": "listPatientAllergies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado exitoso de alergias.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "No autorizado."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/clinic/patient-allergy/delete/{pa_id}": {
      "delete": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Eliminar alergia del paciente",
        "description": "Marca como eliminada una alergia del paciente por su ID.",
        "operationId": "deletePatientAllergy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pa_id",
            "description": "ID de la alergia del paciente",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Alergia eliminada correctamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Alergia no encontrada."
          },
          "401": {
            "description": "No autorizado."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/clinic/patient-allergy/get/{pa_id}": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Obtener alergia del paciente por ID",
        "description": "Devuelve los datos de una alergia específica del paciente identificada por su ID.",
        "operationId": "getPatientAllergyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pa_id",
            "description": "ID de la alergia del paciente",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Alergia encontrada correctamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "Alergia no encontrada."
          },
          "401": {
            "description": "No autorizado - Token inválido o faltante."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },

    "/clinic/bloodtype/list" :{
      "get" :{
        "tags" :[
          "WS Clinic Blood Type"
        ],
        "summary" :"Listar tipos de sangre",
        "description" :"Devuelve todos los tipos de sangre registrados y activos.",
        "operationId" :"ListarTiposSangre",
        "produces" :[
          "application/json"
        ],
        "parameters" :[
          {
            "in" :"header",
            "name" :"tokenapp",
            "description" :"Token para aplicación",
            "required" :true,
            "type" :"string"
          }
        ],
        "responses" :{
          "200" :{
            "description" :"Listado exitoso",
            "schema" :{
              "$ref" :"#/definitions/Response"
            }
          },
          "500" :{
            "description" :"Error interno",
            "schema" :{
              "$ref" :"#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/bloodtype/add": {
      "post": {
        "tags": [
          "WS Clinic Blood Type"
        ],
        "summary": "Agregar tipo de sangre",
        "description": "Agrega un nuevo tipo de sangre al catálogo.",
        "operationId": "addBloodType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación del usuario"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos del tipo de sangre",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BloodTypeInsert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de sangre agregado exitosamente"
          },
          "400": {
            "description": "Parámetros inválidos"
          },
          "401": {
            "description": "Token inválido o no enviado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/clinic/bloodtype/update": {
      "patch": {
        "tags": ["WS Clinic Blood Type"],
        "summary": "Actualizar tipo de sangre",
        "description": "Actualiza la información de un tipo de sangre existente.",
        "operationId": "ActualizarTipoSangre",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación del usuario"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BloodTypeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de sangre actualizado exitosamente"
          },
          "404": {
            "description": "Tipo de sangre no encontrado"
          },
          "400": {
            "description": "Parámetros inválidos"
          },
          "500": {
            "description": "Error en el servidor"
          }
        }
      }
    },
    "/clinic/bloodtype/delete/{btp_id}" :{
      "delete" :{
        "tags" :[
          "WS Clinic Blood Type"
        ],
        "summary" :"Eliminar tipo de sangre",
        "description" :"Elimina lógicamente un tipo de sangre del catálogo.",
        "operationId" :"EliminarTipoSangre",
        "parameters" :[
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación del usuario"
          },
          {
            "name" :"btp_id",
            "in" :"path",
            "required" :true,
            "type" :"integer"
          },
          {
            "name" :"user_proccess",
            "in" :"path",
            "required" :true,
            "type" :"string"
          },

        ],
        "responses" :{
          "200" :{
            "description" :"Tipo de sangre eliminado correctamente"
          },
          "404" :{
            "description" :"No se encontró el tipo de sangre"
          }
        }
      }
    },



    "/clinic/patient-disease/add": {
      "post": {
        "tags": [
          "WS Clinic Disease"
        ],
        "summary": "Agregar enfermedad al paciente",
        "description": "Crea un nuevo registro de enfermedad para un paciente.",
        "operationId": "addPatientDisease",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientDiseaseInsert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enfermedad registrada exitosamente."
          },
          "400": {
            "description": "Solicitud inválida."
          },
          "401": {
            "description": "No autorizado."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/clinic/patient-disease/update/{pd_id}": {
      "patch": {
        "tags": [
          "WS Clinic Disease"
        ],
        "summary": "Actualizar enfermedad del paciente",
        "description": "Actualiza los datos de una enfermedad registrada para un paciente. Requiere token de autenticación válido.",
        "operationId": "updatePatientDisease",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pd_id",
            "description": "ID de la enfermedad del paciente a actualizar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos de la enfermedad a actualizar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientDiseaseUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enfermedad actualizada correctamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos. Verifique los campos requeridos o con errores."
          },
          "401": {
            "description": "No autorizado - Token inválido o faltante"
          },
          "404": {
            "description": "Enfermedad no encontrada o ya eliminada."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },

    "/clinic/patient-disease/list": {
      "get": {
        "tags": [
          "WS Clinic Disease"
        ],
        "summary": "Listar enfermedades del paciente",
        "description": "Devuelve todas las enfermedades registradas de los pacientes en el sistema.",
        "operationId": "patientDiseaseList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para autenticación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado exitoso",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "No autorizado - Token inválido o faltante"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/clinic/patient-disease/get/{pd_id}": {
      "get": {
        "tags": [
          "WS Clinic Disease"
        ],
        "summary": "Obtener enfermedad del paciente por ID",
        "description": "Devuelve los datos de una enfermedad registrada del paciente, identificada por su ID.",
        "operationId": "getPatientDiseaseById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para autenticación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pd_id",
            "description": "ID de la enfermedad del paciente",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Enfermedad encontrada",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "404": {
            "description": "No se encontró la enfermedad"
          },
          "401": {
            "description": "No autorizado - Token inválido o faltante"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/clinic/patient-disease/delete/{pd_id}": {
      "delete": {
      "tags": [
        "WS Clinic Disease"
      ],
      "summary": "Eliminar enfermedad del paciente",
      "description": "Elimina (o marca como eliminada) una enfermedad registrada del paciente, usando su ID.",
      "operationId": "deletePatientDiseaseById",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "tokenapp",
          "description": "Token para autenticación",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "pd_id",
          "description": "ID de la enfermedad del paciente a eliminar",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "Enfermedad eliminada correctamente",
          "schema": {
            "$ref": "#/definitions/Response"
          }
        },
        "404": {
          "description": "Enfermedad no encontrada"
        },
        "401": {
          "description": "No autorizado - Token inválido o faltante"
        },
        "500": {
          "description": "Error interno del servidor"
        }
      }
    }
    },


    "/clinic/TherapySession/list": {
      "get": {
        "tags": [
          "WS Clinic Sessions"
        ],
        "summary": "Listar todas las sesiones de control de terapia",
        "description": "Devuelve una lista de todas las sesiones de control de terapia activas.",
        "operationId": "therapySessionControlList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación para la aplicación.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Lista de sesiones de control de terapia.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TherapySessionControlResponse"
              }
            }
          },
          "401": {
            "description": "No autorizado. Token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "No se encontraron sesiones de control de terapia.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/TherapySession/list/{sec_id}": {
      "get": {
        "tags": [
          "WS Clinic Sessions"
        ],
        "summary": "Obtener sesión de control de terapia por ID",
        "description": "Devuelve la información de una sesión de control de terapia específica por su `sec_id`.",
        "operationId": "therapySessionControlGetById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación para la aplicación.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sec_id",
            "description": "ID de la sesión de control de terapia a recuperar.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sesión de control de terapia encontrada.",
            "schema": {
              "$ref": "#/definitions/TherapySessionControlResponse"
            }
          },
          "401": {
            "description": "No autorizado. Token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Sesión de control de terapia no encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/TherapySession/add": {
      "post": {
        "tags": [
          "WS Clinic Sessions"
        ],
        "summary": "Agregar nueva sesión de control de terapia",
        "description": "Registra una nueva sesión de control de terapia en el sistema.",
        "operationId": "therapySessionControlAdd",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación para la aplicación.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos para crear una nueva sesión de control de terapia.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapySessionControlInsertRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sesión de control de terapia creada exitosamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Solicitud inválida o datos de entrada incorrectos.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "No autorizado. Token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/TherapySession/update/{sec_id}": {
      "patch": {
        "tags": [
          "WS Clinic Sessions"
        ],
        "summary": "Actualizar sesión de control de terapia",
        "description": "Modifica los datos de una sesión de control de terapia existente por su `sec_id`.",
        "operationId": "therapySessionControlUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token de autenticación para la aplicación.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sec_id",
            "description": "ID de la sesión de control de terapia a actualizar.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datos de la sesión de control de terapia a actualizar (actualización parcial).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapySessionControlUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sesión de control de terapia actualizada exitosamente.",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Solicitud inválida o datos de entrada incorrectos.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "No autorizado. Token inválido o no proporcionado.",
            "schema": {
              "$ref": "#/definitions/UnauthorizeResponse"
            }
          },
          "404": {
            "description": "Sesión de control de terapia no encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/clinic/TherapySession/delete/{sec_id}": {
    "delete": {
      "tags": [
        "WS Clinic Sessions"
      ],
      "summary": "Eliminar lógicamente sesión de control de terapia",
      "description": "Marca una sesión de control de terapia como inactiva por su `sec_id`.",
      "operationId": "therapySessionControlDelete",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "header",
          "name": "tokenapp",
          "description": "Token de autenticación para la aplicación.",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "sec_id",
          "description": "ID de la sesión de control de terapia a eliminar lógicamente.",
          "required": true,
          "type": "integer",
          "format": "int32"
       },
        {
         "in": "path",
          "name": "user_process",
          "description": "Usuario que realiza la eliminación lógica.",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "user_deleted": {
                "type": "string",
               "description": "Usuario que realiza la eliminación lógica.",
                "example": "admin_user"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Sesión de control de terapia inactivada exitosamente.",
          "schema": {
            "type": "object",
            "properties": {
             "result": { "type": "boolean", "example": true },
              "message": { "type": "string", "example": "Sesión eliminada lógicamente exitosamente." },
              "" : { "type": "object", "example": {} }
            }
          }
        },
        "400": {
          "description": "Solicitud inválida (ej. 'user_deleted' no proporcionado).",
          "schema": {
            "type": "object",
            "properties": {
              "result": { "type": "boolean", "example": false },
              "message": { "type": "string", "example": "Se requiere 'user_deleted' en el cuerpo de la solicitud para la eliminación." }
            }
          }
        },
        "404": {
          "description": "Sesión de control de terapia no encontrada o ya estaba inactiva.",
          "schema": {
            "type": "object",
            "properties": {
              "result": { "type": "boolean", "example": false },
              "message": { "type": "string", "example": "Sesión de control de terapia no encontrada o ya estaba inactiva." }
            }
          }
        },
        "500": {
          "description": "Error interno del servidor.",
          "schema": {
           "type": "object",
            "properties": {
              "result": { "type": "boolean", "example": false },
              "message": { "type": "string", "example": "Error interno del servidor al procesar la solicitud." }
            }
          }
        }
      }
    }
  },

    "/admin/invoice/list": {
      "get": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Lista de facturas",
        "description": "Obtiene una lista de todos las facturas",
        "operationId": "ListAllInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/invoice/{inv_id}": {
      "get": {
        "tags": [
          "WS Patients"
        ],
        "summary": "Obtener factura por id",
        "description": "Obtiene una factura en especifico por su Id",
        "operationId": "InvoiceGetById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "inv_id",
            "description": "ID de la factura a revisar (inv_id)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/invoice/insert": {
      "post": {
        "tags": [
          "WS Admin"
        ],
        "summary": "Registrar una factura",
        "description": "Crear una nueva factura",
        "operationId": "CreateInvoiceMethod",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "AdminInvoiceCreate",
            "description": "Datos para crear una nueva factura",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminInvoiceCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Factura registrada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al registrar la factura",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/invoice/delete/{inv_id}": {
      "delete": {
        "tags": ["WS Admin"],
        "summary": "Dar de baja una factura",
        "description": "Dar de baja una factura en específico",
        "operationId": "DeleteInvoice",
        "parameters": [
           {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "inv_id",
            "in": "path",
            "description": "ID de la factura",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_process",
            "in": "path",
            "description": "Usuario del proceso de eliminacion",
            "required": true,
            "type": "string"
          }
        ],

        "responses": {
          "200": {
            "description": "Tipo de gasto eliminado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Datos inválidos o faltantes",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Error al eliminar el tipo de gasto",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },




    "/catalog/allergy/add": {
      "post": {
        "tags": ["Allergy Catalog"],
        "summary": "Registrar alergia en el catálogo",
        "description": "Agrega una nueva alergia al catálogo general.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllergyCatalogInsertRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Alergia registrada correctamente" },
          "400": { "description": "Error de validación" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/allergy/update/{al_id}": {
      "patch": {
        "tags": ["Allergy Catalog"],
        "summary": "Actualizar alergia del catálogo",
        "description": "Modifica los datos de una alergia existente en el catálogo.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "al_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllergyCatalogUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Actualización exitosa" },
          "400": { "description": "Error de validación" },
          "404": { "description": "Registro no encontrado" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/allergy/delete/{al_id}": {
      "delete": {
        "tags": ["Allergy Catalog"],
        "summary": "Eliminar alergia del catálogo",
        "description": "Elimina (lógicamente) una alergia del catálogo por ID.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "al_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Alergia eliminada correctamente" },
          "404": { "description": "Registro no encontrado" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/allergy/list": {
      "get": {
        "tags": ["Allergy Catalog"],
        "summary": "Listar alergias activas",
        "description": "Devuelve el listado de todas las alergias activas del catálogo.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado exitoso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllergyCatalogResponse"
              }
            }
          },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },


    "/catalog/disease/add": {
      "post": {
        "tags": ["Disease Catalog"],
        "summary": "Registrar enfermedad en el catálogo",
        "description": "Agrega una nueva enfermedad al catálogo general.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiseaseCatalogInsertRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Enfermedad registrada correctamente" },
          "400": { "description": "Error de validación" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/disease/update/{dis_id}": {
      "patch": {
        "tags": ["Disease Catalog"],
        "summary": "Actualizar enfermedad del catálogo",
        "description": "Actualiza los datos de una enfermedad existente en el catálogo.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dis_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiseaseCatalogUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Enfermedad actualizada correctamente" },
          "400": { "description": "Error de validación" },
          "404": { "description": "No encontrado" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/disease/delete/{dis_id}": {
      "delete": {
        "tags": ["Disease Catalog"],
        "summary": "Eliminar enfermedad del catálogo",
        "description": "Elimina (lógicamente) una enfermedad del catálogo por ID.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dis_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Eliminado correctamente" },
          "404": { "description": "Registro no encontrado" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/disease/list": {
      "get": {
        "tags": ["Disease Catalog"],
        "summary": "Listar enfermedades activas",
        "description": "Obtiene todas las enfermedades activas registradas en el catálogo.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado exitoso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiseaseCatalogResponse"
              }
            }
          },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    },

    "/catalog/disease-type/add": {
      "post": {
        "tags": ["Disease Type"],
        "summary": "Registrar tipo de enfermedad",
        "description": "Crea un nuevo tipo de enfermedad.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiseaseTypeInsertRequest"
            }
          }
        ],
        "responses": {
          "200": { "description": "Tipo de enfermedad registrado correctamente" },
          "400": { "description": "Validación fallida" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error interno del servidor" }
        }
      }
    },
    "/catalog/disease-type/update/{dst_id}": {
      "patch": {
        "tags": ["Disease Type"],
        "summary": "Actualizar tipo de enfermedad",
        "description": "Actualiza un tipo de enfermedad existente por su ID.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string",
            "description": "Token de autenticación"
          },
          {
            "in": "path",
            "name": "dst_id",
            "required": true,
            "type": "integer",
            "description": "ID del tipo de enfermedad a actualizar"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiseaseTypeUpdateRequest",
              "example": {
                "dst_name": "Crónica",
                "dst_description": "Enfermedades que persisten durante largo tiempo",
                "dst_state": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de enfermedad actualizado correctamente"
          },
          "400": {
            "description": "Validación fallida"
          },
          "404": {
            "description": "No encontrado"
          },
          "401": {
            "description": "Token inválido"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/catalog/disease-type/delete/{dst_id}": {
      "delete": {
        "tags": ["Disease Type"],
        "summary": "Eliminar tipo de enfermedad",
        "description": "Elimina lógicamente un tipo de enfermedad.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dst_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Tipo de enfermedad eliminado correctamente" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Registro no encontrado" },
          "500": { "description": "Error del servidor" }
        }
      }
    },
    "/catalog/disease-type/list": {
      "get": {
        "tags": ["Disease Type"],
        "summary": "Listar tipos de enfermedades",
        "description": "Obtiene una lista de tipos de enfermedades activas.",
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado exitoso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiseaseTypeResponse"
              }
            }
          },
          "401": { "description": "Token inválido" },
          "500": { "description": "Error del servidor" }
        }
      }
    }



  },
  "definitions":
  {
    "UnauthorizeResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "example": false,
          "description": "Indica si la operación fue exitosa"
        },
        "message": {
          "type": "string",
          "example": "No autorizado",
          "description": "Mensaje de error o advertencia"
        },
        "data": {
          "type": "null",
          "example": null,
          "description": "No se devuelve data cuando no está autorizado"
        }
      }
    },
    "AllergyCatalogInsertRequest": {
          "type": "object",
          "required": ["al_name", "user_created"],
          "properties": {
            "al_name": { "type": "string" },
            "al_description": { "type": "string" },
            "al_state": { "type": "boolean" },
            "user_created": { "type": "string" }
          }
        },
    "AllergyCatalogUpdateRequest": {
          "type": "object",
          "required": ["al_name", "al_state", "user_modified"],
          "properties": {
            "al_name": { "type": "string" },
            "al_description": { "type": "string" },
            "al_state": { "type": "boolean" },
            "user_modified": { "type": "string" }
          }
        },
    "AllergyCatalogResponse": {
          "type": "object",
          "properties": {
            "al_id": { "type": "integer" },
            "al_name": { "type": "string" },
            "al_description": { "type": "string" },
            "al_state": { "type": "boolean" },
            "date_created": {
              "type": "string",
              "format": "date-time"
            }
          }
        },


    "BloodTypeInsert": {
      "type": "object",
      "properties": {
        "btp_type": {
          "type": "string",
          "maxLength": 3,
          "example": "AB+"
        },
        "btp_description": {
          "type": "string",
          "example": "Grupo sanguíneo AB positivo, donante universal de plasma."
        },
        "user_created": {
          "type": "string",
          "example": "admin"
        }
      },
      "required": ["btp_type","btp_description", "user_created"]
    },
    "BloodTypeUpdate": {
      "type": "object",
      "properties": {
        "btp_id": {
          "type": "integer",
          "example": 1
        },
        "btp_type": {
          "type": "string",
          "maxLength": 3,
          "example": "A+"
        },
        "btp_description": {
          "type": "string",
          "example": "Grupo A positivo"
        },
        "user_modified": {
          "type": "string",
          "example": "admin"
        }
      },
      "required": ["btp_id", "btp_type","btp_description", "user_modified"]
    },


    "DiseaseCatalogInsertRequest": {
      "type": "object",
      "required": ["dis_name", "dis_type_id", "user_created"],
      "properties": {
        "dis_name": { "type": "string" },
        "dis_description": { "type": "string" },
        "dis_type_id": { "type": "integer" },
        "dis_state": { "type": "boolean" },
        "user_created": { "type": "string" }
      }
    },
    "DiseaseCatalogUpdateRequest": {
      "type": "object",
      "required": ["dis_name", "dis_type_id", "user_modified"],
      "properties": {
        "dis_name": { "type": "string" },
        "dis_description": { "type": "string" },
        "dis_type_id": { "type": "integer" },
        "dis_state": { "type": "boolean" },
        "user_modified": { "type": "string" }
      }
    },
    "DiseaseCatalogResponse": {
      "type": "object",
      "properties": {
        "dis_id": { "type": "integer" },
        "dis_name": { "type": "string" },
        "dis_description": { "type": "string" },
        "dis_type_id": { "type": "integer" },
        "dis_state": { "type": "boolean" },
        "date_created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },

    "definitions": {
    "DiseaseTypeUpdateRequest": {
      "type": "object",
      "required": [
        "dst_name",
        "dst_description",
        "dst_state"
      ],
      "properties": {
        "dst_name": {
          "type": "string",
          "example": "Infecciosa",
          "description": "Nombre del tipo de enfermedad"
        },
        "dst_description": {
          "type": "string",
          "example": "Enfermedades causadas por microorganismos patógenos",
          "description": "Descripción del tipo de enfermedad"
        },
        "dst_state": {
          "type": "boolean",
          "example": true,
          "description": "Estado del tipo de enfermedad (activo/inactivo)"
        }
      }
      }
    },


    "AdminInvoiceCreate": {
      "type": "object",
      "properties": {
        "inv_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha de la factura"
        },
        "inv_client_id": {
          "type": "integer",
          "description": "ID del cliente"
        },
        "inv_patient_id": {
          "type": "integer",
          "description": "ID del paciente"
        },
        "inv_subtotal": {
          "type": "number",
          "format": "float",
          "description": "Subtotal de la factura"
        },
        "inv_discount": {
          "type": "number",
          "format": "float",
          "description": "Descuento aplicado"
        },
        "inv_tax": {
          "type": "number",
          "format": "float",
          "description": "Impuesto aplicado"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea la factura"
        }
      },
      "required": [
        "inv_date",
        "inv_client_id",
        "inv_patient_id",
        "inv_subtotal",
        "inv_discount",
        "inv_tax",
        "user_created"
      ]
    },



    "AdminProductInsert": {
      "type": "object",
      "properties": {
        "pro_code": {
          "type": "string",
          "description": "Código del producto"
        },
        "pro_name": {
          "type": "string",
          "description": "Nombre del producto"
        },
        "pro_description": {
          "type": "string",
          "description": "Descripción del producto"
        },
        "pro_price": {
          "type": "number",
          "format": "float",
          "description": "Precio del producto"
        },
        "pro_total_sessions": {
          "type": "integer",
          "description": "Número total de sesiones"
        },
        "pro_duration_days": {
          "type": "integer",
          "description": "Duración en días"
        },
        "pro_image_url": {
          "type": "string",
          "description": "URL de la imagen"
        },
        "pro_therapy_type_id": {
          "type": "integer",
          "description": "ID del tipo de terapia"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "pro_code",
        "pro_name",
        "pro_price",
        "pro_total_sessions",
        "pro_therapy_type_id",
        "user_created"
      ]
    },
    "AdminProductUpdate": {
      "type": "object",
      "properties": {
        "pro_id": {
          "type": "integer",
          "description": "ID del producto"
        },
        "pro_code": {
          "type": "string",
          "description": "Código del producto"
        },
        "pro_name": {
          "type": "string",
          "description": "Nombre del producto"
        },
        "pro_description": {
          "type": "string",
          "description": "Descripción del producto"
        },
        "pro_price": {
          "type": "number",
          "format": "float",
          "description": "Precio del producto"
        },
        "pro_total_sessions": {
          "type": "integer",
          "description": "Número total de sesiones"
        },
        "pro_duration_days": {
          "type": "integer",
          "description": "Duración en días"
        },
        "pro_image_url": {
          "type": "string",
          "description": "URL de la imagen"
        },
        "pro_therapy_type_id": {
          "type": "integer",
          "description": "ID del tipo de terapia"
        },
        "user_process": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "pro_id",
        "user_process"
      ]
    },


    "AdminPromotionCreate": {
      "type": "object",
      "properties": {
        "ppr_product_id": {
          "type": "integer",
          "description": "ID de la promocion"
        },
        "ppr_name": {
          "type": "string",
          "description": "Nombre de la promocion"
        },
        "ppr_description": {
          "type": "string",
          "description": "Descripción de la promocion"
        },
        "ppr_discount_percent": {
          "type": "integer",
          "description": "Precio del producto"
        },
        "ppr_extra_sessions": {
          "type": "integer",
          "description": "Cantidad de sesiones extras"
        },
        "ppr_start_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de inicio de la promoción (YYYY-MM-DD)"
        },
        "ppr_end_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de fin de la promoción (YYYY-MM-DD)"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "ppr_id",
        "user_created"
      ]
    },
    "AdminPromotionUpdate": {
      "type": "object",
      "properties": {
        "ppr_id": {
          "type": "integer",
          "description": "ID de la promocion"
        },
        "ppr_product_id": {
          "type": "integer",
          "description": "ID del producto asociado"
        },
        "ppr_name": {
          "type": "string",
          "description": "Nombre de la promocion"
        },
        "ppr_description": {
          "type": "string",
          "description": "Descripción de la promocion"
        },
        "ppr_discount_percent": {
          "type": "integer",
          "description": "Precio del producto"
        },
        "ppr_extra_sessions": {
          "type": "integer",
          "description": "Cantidad de sesiones extras"
        },
        "ppr_start_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de inicio de la promoción (YYYY-MM-DD)"
        },
        "ppr_end_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de fin de la promoción (YYYY-MM-DD)"
        },
        "user_process": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "ppr_id",
        "user_process"
      ]
    },

    "AdminPaymentMethodCreate": {
      "type": "object",
      "properties": {
        "pme_name": {
          "type": "string",
          "description": "Nombre del metodo de pago"
        },
        "pme_description": {
          "type": "string",
          "description": "Descripción del metodo de pago"
        },
        "pme_require_references": {
          "type": "boolean",
          "description": "Indica si la referencia es necesaria"
        },
        "pme_require_picture_proff": {
          "type": "boolean",
          "description": "Indica si la prueba es necesaria"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "pme_name",
        "pme_description",
        "pme_require_references",
        "pme_require_picture_proff",
        "user_created"
      ]
    },
    "AdminPaymentMethodUpdate": {
      "type": "object",
      "properties": {
        "pme_id": {
          "type": "integer",
          "description": "ID del metodo de pago"
        },
        "pme_name": {
          "type": "string",
          "description": "Nombre del metodo de pago"
        },
        "pme_description": {
          "type": "string",
          "description": "Descripción del metodo de pago"
        },
        "pme_require_references": {
          "type": "boolean",
          "description": "Indica si la referencia es necesaria"
        },
        "pme_require_picture_proff": {
          "type": "boolean",
          "description": "Indica si la prueba es necesaria"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el producto"
        }
      },
      "required": [
        "pme_id",
        "user_created"
      ]
    },


    "AdminTherapyTypeMethodUpdate": {
      "type": "object",
      "properties": {
        "tht_id": {
          "type": "integer",
          "description": "ID del tipo de terapia"
        },
        "tht_name": {
          "type": "string",
          "description": "Nombre del tipo de terapia"
        },
        "tht_description": {
          "type": "string",
          "description": "Descripción del tipo de terapia"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el tipo de terapia"
        }
      },
      "required": [
        "tht_id",
        "user_created"
      ]
    },
    "AdminTherapyTypeMethodCreate": {
      "type": "object",
      "properties": {
        "tht_name": {
          "type": "string",
          "description": "Nombre del tipo de terapia"
        },
        "tht_description": {
          "type": "string",
          "description": "Descripción del tipo de terapia"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el tipo de terapia"
        }
      },
      "required": [
        "tht_name",
        "tht_description",
        "user_created"
      ]
    },


    "AdminMedicalPersonTypeCreate": {
      "type": "object",
      "properties": {
         "mpt_name": {
          "type": "string",
          "description": "Nombre del tipo de medico"
        },
        "mpt_description": {
          "type": "string",
          "description": "Descripción del tipo de medico"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el tipo de medico"
        }
      },
      "required": [
        "mpt_name",
        "mpt_description",
        "user_created"
      ]
    },
    "AdminMedicalPersonTypeUpdate": {
      "type": "object",
      "properties": {
        "mpt_id": {
          "type": "integer",
          "description": "ID del tipo de medico"
        },
         "mpt_name": {
          "type": "string",
          "description": "Nombre del tipo de medico"
        },
        "mpt_description": {
          "type": "string",
          "description": "Descripción del tipo de medico"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que actuliza el tipo de medico"
        }
      },
      "required": [
        "mpt_Id",
        "mpt_name",
        "mpt_description",
        "user_created"
      ]
    },


    "AdminClientCreate": {
      "type": "object",
      "properties": {
        "cli_person_id": {
          "type": "integer",
          "description": "Id de la persona asociada"
        },
         "cli_identification": {
          "type": "string",
          "description": "Identificacion del cliente"
        },
        "cli_name": {
          "type": "string",
          "description": "Nombre del cliente"
        },
        "cli_address_bill": {
          "type": "string",
          "description": "Direccion de envio de la factura"
        },
        "cli_mail_bill": {
          "type": "string",
          "description": "Correo donde se enviara la factura"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el tipo de medico"
        }
      },
      "required": [
        "cli_person_id",
        "cli_identification",
        "cli_name",
        "cli_address_bill",
        "cli_mail_bill",
        "user_created"
      ]
    },
    "AdminClientUpdate": {
      "type": "object",
      "properties": {
        "cli_id": {
          "type": "integer",
          "description": "Id del cliente a actualizar"
        },
        "cli_person_id": {
          "type": "integer",
          "description": "Id de la persona asociada"
        },
         "cli_identification": {
          "type": "string",
          "description": "Identificacion del cliente"
        },
        "cli_name": {
          "type": "string",
          "description": "Nombre del cliente"
        },
        "cli_address_bill": {
          "type": "string",
          "description": "Direccion de envio de la factura"
        },
        "cli_mail_bill": {
          "type": "string",
          "description": "Correo donde se enviara la factura"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el tipo de medico"
        }
      },
      "required": [
        "cli_id",
        "cli_person_id",
        "cli_identification",
        "cli_name",
        "cli_address_bill",
        "cli_mail_bill",
        "user_created"
      ]
    },


    "AdminExpenseTypeCreate": {
      "type": "object",
      "properties": {
        "ext_name": {
          "type": "string",
          "description": "Nombre del nuevo gasto"
        },
        "ext_description": {
          "type": "string",
          "description": "Descripcion del nuevc gasto"
        },
        "user_process": {
          "type": "string",
          "description": "Usuario que crea el tipo de gasto"
        }
      },
      "required": [
        "ext_name",
        "ext_description",
        "user_process"
      ]
    },
    "AdminExpenseTypeUpdate": {
      "type": "object",
      "properties": {
        "ext_id": {
          "type": "integer",
          "description": "Id del tipo de gasto a actualizar"
        },
        "ext_name": {
          "type": "string",
          "description": "Nombre del tipo de gasto"
        },
         "ext_description": {
          "type": "string",
          "description": "Descripcion del tipo de gasto"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que actualiza el tipo de gasto"
        }
      },
      "required": [
        "ext_id",
        "ext_name",
        "ext_description",
        "user_created"
      ]
    },

    "AdminExpenseInsert": {
      "type": "object",
      "properties": {
        "exp_type_id": {
          "type": "integer",
          "description": "Id deL tipo de gasto a registrar"
        },
        "exp_payment_method_id": {
          "type": "integer",
          "description": "Id deL metodo de pago a registrar"
        },
        "exp_description": {
          "type": "string",
          "description": "Descripcion del gasto"
        },
        "exp_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora del gasto en formato ISO 8601 (e.g., 2025-07-03T14:30:00Z)"
        },
        "exp_amount": {
          "type": "number",
          "format": "float",
          "description": "Monto del gasto (ej. 125.50)"
        },
        "exp_receipt_number": {
          "type": "string",
          "description": "Número de comprobante o factura asociado al gasto"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que registro el gasto"
        }
      },
      "required": [
        "exp_type_id",
        "exp_payment_method_id",
        "exp_description",
        "exp_date",
        "exp_amount",
        "exp_receipt_number",
        "user_process"
      ]
    },
    "AdminExpenseUpdate": {
      "type": "object",
      "properties": {
        "exp_id": {
          "type": "integer",
          "description": "Id deL gasto a actualizar"
        },
        "exp_type_id": {
          "type": "integer",
          "description": "Id deL tipo de gasto a actualizar"
        },
        "exp_payment_method_id": {
          "type": "integer",
          "description": "Id deL metodo de pago a actualizar"
        },
        "exp_description": {
          "type": "string",
          "description": "Descripcion del gasto"
        },
        "exp_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora del gasto en formato ISO 8601 (e.g., 2025-07-03T14:30:00Z)"
        },
        "exp_amount": {
          "type": "number",
          "format": "float",
          "description": "Monto del gasto (ej. 125.50)"
        },
        "exp_receipt_number": {
          "type": "string",
          "description": "Número de comprobante o factura asociado al gasto"
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que actualiza el gasto"
        }
      },
      "required": [
        "exp_id",
        "exp_type_id",
        "exp_payment_method_id",
        "exp_description",
        "exp_date",
        "exp_amount",
        "exp_receipt_number",
        "user_process"
      ]
    },

    "MedicalHistoryInsertRequest": {
      "type": "object",
      "required": [
        "hist_patient_id",
        "hist_primary_complaint",
        "hist_onset_date"
      ],
      "properties": {
        "hist_patient_id": {
          "type": "integer",
          "format": "int32",
          "description": "ID del paciente asociado a este historial."
        },
        "hist_primary_complaint": {
          "type": "string",
          "description": "Queja principal del paciente."
        },
        "hist_onset_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de inicio de la queja (YYYY-MM-DD)."
        },
        "hist_related_trauma": {
          "type": "string",
          "description": "Trauma(s) relacionado(s), si aplica."
        },
        "hist_current_treatment": {
          "type": "string",
          "description": "Tratamiento(s) actual(es)."
        },
        "hist_notes": {
          "type": "string",
          "description": "Notas adicionales sobre el historial."
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que creó el registro."
        }
      }
    },
    "MedicalHistoryUpdateRequest": {
      "type": "object",
      "properties": {
        "hist_primary_complaint": {
          "type": "string",
          "maxLength": 1000,
          "description": "Queja principal del paciente."
        },
        "hist_onset_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de inicio de la condición (YYYY-MM-DD)."
        },
        "hist_related_trauma": {
          "type": "boolean",
          "description": "¿Está relacionado con un trauma?"
        },
        "hist_current_treatment": {
          "type": "string",
          "maxLength": 1000,
          "description": "Tratamiento actual del paciente."
        },
        "hist_notes": {
          "type": "string",
          "maxLength": 1000,
          "description": "Notas adicionales del historial médico."
        }
      },
      "required": [],
      "example": {
        "hist_primary_complaint": "Dolor de cabeza crónico con migrañas severas, recurrente semanalmente.",
        "hist_notes": "Se recomienda MRI cerebral y consulta con neurólogo. Paciente refiere antecedentes familiares de migraña."
      }
    },
    "MedicalHistoryResponse": {
      "type": "object",
      "properties": {
        "hist_id": {
          "type": "integer",
          "format": "int32",
          "description": "ID único del historial médico."
        },
        "hist_patient_id": {
          "type": "integer",
          "format": "int32",
          "description": "ID del paciente asociado."
        },
        "hist_primary_complaint": {
          "type": "string",
          "description": "Queja principal del paciente."
        },
        "hist_onset_date": {
          "type": "string",
          "description": "Fecha de inicio de la queja (DD/MM/YYYY)."
        },
        "hist_related_trauma": {
          "type": "string",
          "description": "Trauma(s) relacionado(s)."
        },
        "hist_current_treatment": {
          "type": "string",
          "description": "Tratamiento(s) actual(es)."
        },
        "hist_notes": {
          "type": "string",
          "description": "Notas adicionales."
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que creó el registro."
        },
        "date_created": {
          "type": "string",
          "description": "Fecha de creación del registro (DD/MM/YYYY HH24:MI:SS)."
        },
        "user_modified": {
          "type": "string",
          "description": "Usuario que modificó el registro."
        },
        "date_modified": {
          "type": "string",
          "description": "Fecha de última modificación (DD/MM/YYYY HH24:MI:SS)."
        },
        "user_deleted": {
          "type": "string",
          "description": "Usuario que eliminó el registro (si aplica)."
        },
        "date_deleted": {
          "type": "string",
          "description": "Fecha de eliminación (si aplica) (DD/MM/YYYY HH24:MI:SS)."
        }
      }
    },
    "PatientAllergyInsert": {
      "type": "object",
      "required": [
        "pa_patient_id",
        "pa_allergy_id",
        "user_created"
      ],
      "properties": {
        "pa_patient_id": {
          "type": "integer",
          "example": 1
        },
        "pa_allergy_id": {
          "type": "integer",
          "example": 5
        },
        "pa_reaction_description": {
          "type": "string",
          "example": "Reacción alérgica leve"
        },
        "user_created": {
          "type": "string",
          "example": "admin"
        }
      }
    },
    "PatientAllergyUpdate": {
      "type": "object",
      "required": [
        "pa_patient_id",
        "pa_allergy_id",
        "user_modified"
      ],
      "properties": {
        "pa_patient_id": {
          "type": "integer",
          "example": 1
        },
        "pa_allergy_id": {
          "type": "integer",
          "example": 5
        },
        "pa_reaction_description": {
          "type": "string",
          "example": "Reacción moderada"
        },
        "user_modified": {
          "type": "string",
          "example": "usuario_editor"
        }
      }
    },
    "PatientDiseaseInsert": {
      "type": "object",
      "required": [
        "pd_patient_id",
        "pd_disease_id",
        "user_created"
      ],
      "properties": {
        "pd_patient_id": {
          "type": "integer",
          "example": 2
        },
        "pd_disease_id": {
          "type": "integer",
          "example": 3
        },
        "pd_notes": {
          "type": "string",
          "example": "Paciente en observación"
        },
        "user_created": {
          "type": "string",
          "example": "doctor1"
        }
      }
    },
    "PatientDiseaseUpdate": {
      "type": "object",
      "required": [
        "pd_disease_id",
        "pd_is_current",
        "user_modified"
      ],
      "properties": {
        "pd_disease_id": {
          "type": "integer",
          "example": 3
        },
        "pd_notes": {
          "type": "string",
          "example": "Enfermedad controlada"
        },
        "pd_is_current": {
          "type": "boolean",
          "example": false
        },
        "user_modified": {
          "type": "string",
          "example": "doctor2"
        }
      }
    },
    "clinic_session_insert_request": {
      "type": "object",
      "required": [
        "cli_person_id",
        "cli_identification",
        "cli_name"
      ],
      "properties": {
        "cli_person_id": {
          "type": "integer"
        },
        "cli_identification": {
          "type": "string",
          "maxLength": 13
        },
        "cli_name": {
          "type": "string",
          "maxLength": 100
        },
        "cli_address_bill": {
          "type": "string",
          "maxLength": 200
        },
        "cli_mail_bill": {
          "type": "string",
          "maxLength": 100
        },
        "user_created": {
          "type": "string"
        }
      }
    },
    "clinic_session_update_request": {
      "type": "object",
      "required": [
        "cli_person_id",
        "cli_identification",
        "cli_name",
        "user_modified"
      ],
      "properties": {
        "cli_person_id": {
          "type": "integer"
        },
        "cli_identification": {
          "type": "string",
          "maxLength": 13
        },
        "cli_name": {
          "type": "string",
          "maxLength": 100
        },
        "cli_address_bill": {
          "type": "string",
          "maxLength": 200
        },
        "cli_mail_bill": {
          "type": "string",
          "maxLength": 100
        },
        "user_modified": {
          "type": "string"
        }
      }
    },

    "TherapySessionControlInsertRequest": {
      "type": "object",
      "properties": {
        "sec_inv_id": {
          "type": "integer",
          "description": "ID del inventario/paquete asociado a la sesión."
        },
        "sec_pro_id": {
          "type": "integer",
          "description": "ID del profesional (terapeuta/médico) asociado a la sesión."
        },
        "sec_ses_number": {
          "type": "integer",
          "description": "Número de la sesión (ej. 1 de 10)."
        },
        "sec_ses_agend_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora agendada de la sesión (YYYY-MM-DD HH:MM:SS).",
          "nullable": true
        },
        "sec_ses_exec_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de ejecución real de la sesión (YYYY-MM-DD HH:MM:SS).",
          "nullable": true
        },
        "sec_typ_id": {
          "type": "integer",
          "description": "ID del tipo de sesión (ej. Terapia Física, Quiropráctica)."
        },
        "sec_med_staff_id": {
          "type": "integer",
          "description": "ID del personal médico/staff que realiza la sesión."
        },
        "ses_consumed": {
          "type": "boolean",
          "description": "Indica si la sesión ha sido consumida.",
          "default": false
        },
        "ses_state": {
          "type": "boolean",
          "description": "Estado activo/inactivo de la sesión.",
          "default": true
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que crea el registro."
        }
      },
      "required": [
        "sec_inv_id",
        "sec_pro_id",
        "sec_ses_number",
        "sec_typ_id",
        "sec_med_staff_id",
        "user_created"
      ],
      "example": {
        "sec_inv_id": 2,
        "sec_pro_id": 5,
        "sec_ses_number": 1,
        "sec_ses_agend_date": "2025-07-05 10:30:00",
        "sec_ses_exec_date": null,
        "sec_typ_id": 1,
        "sec_med_staff_id": 15,
        "ses_consumed": false,
        "ses_state": true,
        "user_created": "admin"
      }
    },
    "TherapySessionControlUpdateRequest": {
      "type": "object",
      "properties": {
        "sec_inv_id": {
          "type": "integer",
          "description": "ID del inventario/paquete asociado a la sesión."
        },
        "sec_pro_id": {
          "type": "integer",
          "description": "ID del profesional (terapeuta/médico) asociado a la sesión."
        },
        "sec_ses_number": {
          "type": "integer",
          "description": "Número de la sesión (ej. 1 de 10)."
        },
        "sec_ses_agend_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora agendada de la sesión (YYYY-MM-DD HH:MM:SS).",
          "nullable": true
        },
        "sec_ses_exec_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de ejecución real de la sesión (YYYY-MM-DD HH:MM:SS).",
          "nullable": true
        },
        "sec_typ_id": {
          "type": "integer",
          "description": "ID del tipo de sesión (ej. Terapia Física, Quiropráctica)."
        },
        "sec_med_staff_id": {
          "type": "integer",
          "description": "ID del personal médico/staff que realiza la sesión."
        },
        "ses_consumed": {
          "type": "boolean",
          "description": "Indica si la sesión ha sido consumida."
        },
        "ses_state": {
          "type": "boolean",
          "description": "Estado activo/inactivo de la sesión."
        },
        "user_modified": {
          "type": "string",
          "description": "Usuario que modifica el registro."
        }
      },
      "example": {
        "sec_ses_exec_date": "2025-07-05 10:45:00",
        "ses_consumed": true,
        "user_modified": "therapist_user"
      }
    },
    "TherapySessionControlResponse": {
      "type": "object",
      "properties": {
        "sec_id": {
          "type": "integer",
          "description": "ID único de la sesión de control."
        },
        "sec_inv_id": {
          "type": "integer",
          "description": "ID del inventario/paquete asociado."
        },
        "sec_pro_id": {
          "type": "integer",
          "description": "ID del profesional asociado."
        },
        "sec_ses_number": {
          "type": "integer",
          "description": "Número de la sesión."
        },
        "sec_ses_agend_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora agendada de la sesión (DD/MM/YYYY HH:MM:SS).",
          "nullable": true
        },
        "sec_ses_exec_date": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de ejecución real de la sesión (DD/MM/YYYY HH:MM:SS).",
          "nullable": true
        },
        "sec_typ_id": {
          "type": "integer",
          "description": "ID del tipo de sesión."
        },
        "sec_med_staff_id": {
          "type": "integer",
          "description": "ID del personal médico/staff."
        },
        "ses_consumed": {
          "type": "boolean",
          "description": "Estado de consumo de la sesión."
        },
        "ses_state": {
          "type": "boolean",
          "description": "Estado activo/inactivo del registro de sesión."
        },
        "user_created": {
          "type": "string",
          "description": "Usuario que creó el registro."
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha de creación del registro (DD/MM/YYYY HH:MM:SS)."
        },
        "user_modified": {
          "type": "string",
          "nullable": true,
          "description": "Usuario que modificó el registro."
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "description": "Fecha de última modificación (DD/MM/YYYY HH:MM:SS)."
        },
        "user_deleted": {
          "type": "string",
          "nullable": true,
          "description": "Usuario que eliminó lógicamente el registro."
        },
        "date_deleted": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "description": "Fecha de eliminación lógica (DD/MM/YYYY HH:MM:SS)."
        }
      },
      "example": {
        "sec_id": 1,
        "sec_inv_id": 101,
        "sec_pro_id": 5,
        "sec_ses_number": 1,
        "sec_ses_agend_date": "05/07/2025 10:30:00",
        "sec_ses_exec_date": "05/07/2025 10:45:00",
        "sec_typ_id": 1,
        "sec_med_staff_id": 15,
        "ses_consumed": true,
        "ses_state": true,
        "user_created": "scheduler",
        "date_created": "04/07/2025 09:00:00",
        "user_modified": "therapist_user",
        "date_modified": "05/07/2025 10:45:00",
        "user_deleted": null,
        "date_deleted": null
      }
    },

    "addQuestion": {
      "type": "object",
      "properties": {
        "qst_description": {
          "type": "string",
          "format": "string",
          "description": "Ingreso de la pregunta"
        },
        "qst_dimension_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID de dimension de la pregunta"
        },
        "qst_tooltip_text": {
            "type": "string",
            "format": "string",
            "description": "Texto de ayuda de la pregunta"
        },
        "qst_answer_type_id": {
          "type": "integer",
          "format": "int64",
          "description": "Tipo de respuesta",
          "example": "1"
        }
      }
    },
    "insert_urcp": {
      "type": "object",
      "properties": {
        "ur_id": {
          "type": "integer",
          "format": "integer"
        },
        "cp_id": {
          "type": "integer",
          "format": "integer"
        }
      }
    },
    "update_urcp": {
      "type": "object",
      "properties": {
        "urcp_id": {
          "type": "integer"
        },
        "cp_id": {
          "type": "integer"
        }
      }
    },
    "update_password": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"

        },
        "newPassword": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "send_email_password": {
      "type": "object",
      "properties": {
        "user_mail": {
          "type": "string",
          "example": "eddermontoya99@gmail.com"
        }
      }
    },
    "update_email_password": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "new_password": {
          "type": "string"
        },
        "token_temp": {
          "type": "string"
        }
      }

    },
    "select_activecp_faculty":{
      "type": "object",
      "properties": {
        "id_unit": {
          "type": "integer"
        }
      }
    },
    "insert_menurol":{
      "type": "object",
      "properties": {
        "menu_id": {
          "type": "integer",
          "format": "integer"
        },
        "rol_id": {
          "type": "integer",
          "format": "integer"
        }
      }
    },
    "up_menurol": {
      "type": "object",
      "properties": {
        "mr_id": {
          "type": "integer",
          "format": "integer"
        },
        "menu_id": {
          "type": "integer",
          "format": "integer"
        },
        "rol_id": {
          "type": "integer",
          "format": "integer"
        }

      }
    },
    "notification_update": {
      "type": "object",
      "properties": {
        "notification_id":{
          "type": "integer"

        },
        "notification_read": {
          "type": "boolean"
        }
      }
    },
    "insert_useRol": {
      "type": "object",
      "properties": {
        "id_rol": {
          "type": "integer",
          "example": 1

        },
        "id_user": {
          "type": "integer",
            "example": 57
        }
      }
    },
    "up_useRol": {
      "type": "object",
      "properties": {
        "id_user_rol": {
          "type": "integer",
          "example": 1

        },
        "id_rol": {
          "type": "integer",
          "example": 1

        },
        "id_user": {
          "type": "integer",
            "example": 57
        }

      }
    },
    "insert_user": {
       "type": "object",
       "properties": {
         "person_id": {
           "type": "integer",
           "format": "integer"
         },
         "person_ci": {
           "type": "string",
           "format": "string"
         },
         "person_mail": {
           "type": "string",
           "format": "string"
         },
         "person_password": {
           "type": "string"
         },
         "rol_id": {
           "type": "integer"
         },
         "id_career_period": {
           "type": "integer"
         }
       }
    },
    "delete_id": {
      "type": "object",
      "properties": {
        "del_id": {
          "type": "integer",
          "format": "integer",
          "example": 4
        }
      }
    },
    "update_id": {
      "type": "object",
      "properties": {
        "id_user": {
          "type": "integer",
          "format": "integer",
          "example": 4
        }
      }
    },
    "insert_modulo": {
       "type": "object",
       "properties": {

         "mod_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_description": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_order": {
           "type": "integer",
           "format": "integer",
           "example": 56
         },
         "mod_icon_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         }
       }
    },
    "insert_menu": {
       "type": "object",
       "properties": {
         "menu_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_order": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_module_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_parent_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_icon_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_href": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_url": {
           "type": "string",
           "format": "string",
           "example": "string"
         }
       }
    },
    "insert_rolsistem": {
       "type": "object",
       "properties": {
         "rol_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "rol_description": {
           "type": "string",
           "format": "String",
           "example": "numero 4"
         }
       }
    },
    "up_rolsistem": {
       "type": "object",
       "properties": {
         "rol_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "rol_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "rol_description":{
           "type": "string",
           "format": "String",
           "example": "numero 4"
         }
       }
    },
    "up_modulo": {
       "type": "object",
       "properties": {
         "mod_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "mod_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_description": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_order": {
           "type": "string",
           "format": "String",
           "example": ""
         },"mod_icon_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         }
       }
    },
    "up_menu": {
       "type": "object",
       "properties": {
         "menu_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_order": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_module_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_parent_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_icon_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_href": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_url": {
           "type": "string",
           "format": "string",
           "example": "string"
         }
       }
    },
    "loginUserDef": {
       "type": "object",
       "properties": {
         "login_user": {
           "type": "string",
           "format": "string",
           "example": "admin"
         },
         "login_password": {
           "type": "string",
           "format": "string",
           "example": "123456"
         },
         "host_name": {
           "type": "string",
           "format": "string",
           "example": "localhost"
         }
       }
    },
    "logoutUserDef": {
      "type": "object",
      "properties": {
        "logId": {
          "type": "integer"
        }
      }
    },
    "AcademyUnitResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the academic unit"
        },
        "name": {
          "type": "string",
          "description": "The name of the academic unit"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the academic unit"
        },
        "state": {
          "type": "boolean",
          "description": "The status of the academic unit (active/inactive)"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the academic unit was created"
        },
        "date_updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the academic unit was last updated"
        }
      }
    },
    "AcademyUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID de la unidad académica"
        },
        "name": {
          "type": "string",
          "description": "Nombre de la unidad académica"
        },
        "id_ies": {
          "type": "string",
          "description": "ID de la institución educativa"
        },
        "description": {
          "type": "string",
          "description": "Descripción de la unidad académica"
        },
        "phone_number": {
          "type": "string",
          "description": "Número de teléfono de la unidad académica"
        },
        "address": {
          "type": "string",
          "description": "Dirección de la unidad académica"
        },
        "manager_name": {
          "type": "string",
          "description": "Nombre del director de la unidad académica"
        },
        "web_site": {
          "type": "string",
          "description": "Sitio web de la unidad académica"
        },
        "mail_address": {
          "type": "string",
          "description": "Correo electrónico de la unidad académica"
        },
        "state": {
          "type": "boolean",
          "description": "Estado de la unidad académica (activo/inactivo)"
        },
        "user_created": {
          "type": "string",
          "description": "ID del usuario que creó la unidad académica"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de creación de la unidad académica"
        },
        "user_modified": {
          "type": "string",
          "description": "ID del usuario que modificó la unidad académica"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de modificación de la unidad académica"
        },
        "user_deleted": {
          "type": "string",
          "description": "ID del usuario que eliminó la unidad académica"
        },
        "date_deleted": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de eliminación de la unidad académica"
        }
      },
      "required": [
        "name",
        "id_ies",
        "description",
        "phone_number",
        "address",
        "manager_name",
        "web_site",
        "mail_address",
        "state",
        "user_created",
        "date_created"
      ]
    },
    "CareerPeriodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "AdminCicleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "AdminPersonResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin person"
        },
        "first_name": {
          "type": "string",
          "description": "The first name of the admin person"
        },
        "last_name": {
          "type": "string",
          "description": "The last name of the admin person"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email address of the admin person"
        },
        "user_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the admin person was created (optional)"
        },
        "user_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the admin person was last modified (optional)"
        }
      }
    },
    "ies": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID de la unidad académica"
        },
        "name": {
          "type": "string",
          "description": "Nombre de la unidad académica"
        },
        "id_ies": {
          "type": "string",
          "description": "ID de la institución educativa"
        },
        "description": {
          "type": "string",
          "description": "Descripción de la unidad académica"
        },
        "phone_number": {
          "type": "string",
          "description": "Número de teléfono de la unidad académica"
        },
        "address": {
          "type": "string",
          "description": "Dirección de la unidad académica"
        },
        "manager_name": {
          "type": "string",
          "description": "Nombre del director de la unidad académica"
        },
        "web_site": {
          "type": "string",
          "description": "Sitio web de la unidad académica"
        },
        "mail_address": {
          "type": "string",
          "description": "Correo electrónico de la unidad académica"
        },
        "state": {
          "type": "string",
          "description": "Estado de la unidad académica (activo/inactivo)"
        },
        "user_created": {
          "type": "string",
          "description": "ID del usuario que creó la unidad académica"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de creación de la unidad académica"
        },
        "user_modified": {
          "type": "string",
          "description": "ID del usuario que modificó la unidad académica"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de modificación de la unidad académica"
        },
        "user_deleted": {
          "type": "string",
          "description": "ID del usuario que eliminó la unidad académica"
        },
        "date_deleted": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de eliminación de la unidad académica"
        }
      },
      "required": [
        "name",
        "id_ies",
        "description",
        "address",
        "manager_name",
        "web_site",
        "mail_address",
        "state",
        "user_created"
      ]
    },
    "AdminiesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "MaritalStatusResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "ParameterListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "PeriodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "PersonGenreResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "UniversitycareerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "Cursos": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       },
       "carrera": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "CursosPeriodo": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       }

      }
     },
    "Categorias": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "ListRequisitos": {
     "type": "object",
     "properties": {
       "requisito": {
         "type": "string"
       }
      }
     },
    "MoodleCons": {
     "type": "object",
     "properties": {
       "wstoken": {
         "type": "string"
       },
       "wsfunction": {
         "type": "string"
       },
       "key": {
         "type": "string"
       },
       "value": {
         "type": "string"
       }
      }
     },
    "MoodleCreate": {
     "type": "object",
     "properties": {
       "wstoken": {
         "type": "string"
       },
       "wsfunction": {
         "type": "string"
        },
        "fullname": {
        "type": "string",
        "description": "Nombre completo del curso"
        },
        "shortname": {
          "type": "string",
          "description": "Nombre corto del curso"
        },
        "categoryid": {
          "type": "integer",
          "description": "ID de la categoría del curso"
        },
        "idnumber": {
          "type": "string",
          "description": "Número de ID del curso"
        },
        "summary": {
          "type": "string",
          "description": "Resumen del curso"
        },
        "summaryformat": {
          "type": "integer",
          "description": "Formato del resumen del curso",
          "default": 1
        },
        "format": {
          "type": "string",
          "description": "Formato del curso",
          "default": "topics"
        },
        "showgrades": {
          "type": "integer",
          "description": "Mostrar calificaciones",
          "default": 1
        },
        "newsitems": {
          "type": "integer",
          "description": "Número de elementos de noticias en la página del curso",
          "default": 5
        },
        "startdate": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha de inicio del curso en timestamp UNIX"
        },
        "enddate": {
           "type": "string",
           "format": "date-time",
          "description": "Fecha de fin del curso en timestamp UNIX"
        },
        "numsections": {
          "type": "integer",
          "description": "Número de secciones del curso",
          "default": 1
        },
        "maxbytes": {
          "type": "integer",
          "description": "Tamaño máximo de archivo que se puede subir",
          "default": 0
        },
        "showreports": {
          "type": "integer",
          "description": "Mostrar informes de actividad",
          "default": 0
        },
        "visible": {
          "type": "integer",
          "description": "Curso visible para los estudiantes",
          "default": 1
        },
        "hiddensections": {
          "type": "integer",
          "description": "Cómo se muestran las secciones ocultas",
          "default": 0
        },
        "groupmode": {
          "type": "integer",
          "description": "Modo de grupo del curso",
          "default": 0
        },
        "groupmodeforce": {
          "type": "integer",
          "description": "Forzar el modo de grupo",
          "default": 0
        },
        "defaultgroupingid": {
          "type": "integer",
          "description": "ID de agrupación predeterminado",
          "default": 0
        },
        "enablecompletion": {
          "type": "integer",
          "description": "Habilitar el seguimiento de finalización",
          "default": 0
        },
        "completionnotify": {
          "type": "integer",
          "description": "Notificar sobre la finalización",
          "default": 0
        },
        "lang": {
          "type": "string",
          "description": "Idioma del curso"
        },
        "forcetheme": {
          "type": "string",
          "description": "Nombre del tema forzado"
        },
        "courseformatoptions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Nombre de la opción de formato del curso",
                "default": "hiddensections"
              },
              "value": {
                "type": "string",
                "description": "Valor de la opción de formato del curso"
              }
            }
          }
        },
        "customfields": {
          "type": "string"
        }
      }

     },
    "CreateCursos": {
     "type": "object",
     "properties": {
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "id_curso": {
         "type": "integer"
       },
       "namecurso": {
         "type": "string",
         "format": "string"
       },
       "shortnamecurso": {
         "type": "string",
         "format": "string"
       },
       "descripcion": {
         "type": "string",
         "format": "string"
       },
       "id_moodle": {
         "type": "integer"
       },
       "id_categoria": {
         "type": "integer"
       },
       "id_dimension": {
         "type": "integer"
       },
       "datestart": {
         "type": "string",
         "format": "date-time"
       },
       "dateend": {
         "type": "string",
         "format": "date-time"
       },
       "isclosed": {
         "type": "boolean"
       },
       "state": {
         "type": "boolean"
       },
       "user": {
         "type": "string",
         "format": "string"
       },
       "date": {
         "type": "string",
         "format": "date-time"
       },
       "showreport": {
         "type": "integer"
         },
        "showhidden": {
         "type": "integer"
         },
        "showqualification": {
         "type": "integer"
         },
        "endcourse": {
         "type": "integer"
         }
     }
     },
    "CreateReq": {
     "type": "object",
     "properties": {
       "id_criterio": {
         "type": "integer"
       },

       "id_nivel": {
         "type": "integer"
       },

       "descripcion": {
         "type": "string",
         "format": "string"
       },
       "maxrange": {
         "type": "integer"
       },
       "id_semaforo": {
         "type": "integer"
       },

       "state": {
         "type": "boolean"
       }

     }
     },
    "CreateCursosAsignacion": {
     "type": "object",
     "properties": {
       "id_asignacion": {
         "type": "integer"
       },
       "state": {
         "type": "boolean"
       },
       "date": {
         "type": "string",
         "format": "date-time"
       },
       "id_asesor": {
         "type": "integer"
       },
       "id_curso": {
         "type": "integer"
       },
       "id_user": {
         "type": "integer"
       }

      }
     },
    "Content": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contentData": {
          "type": "string"
        }
      }
    },
    "Tokens": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       },
       "carrera": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "NotFound": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string",
            "example": "Recurso no encontrado"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "404"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "500"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string",
            "example": "ok"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "200"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}